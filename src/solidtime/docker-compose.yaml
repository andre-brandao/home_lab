services:
  app:
    restart: always
    image: "solidtime/solidtime:${SOLIDTIME_IMAGE_TAG:-latest}"
    user: "1000:1000"
    labels:
      - "homepage.group=Monitoring"
      - "homepage.name=Solidtime"
      - "homepage.description=Time tracking application"
      - "homepage.icon=solidtime.png"
      - "homepage.href=https://${APP_DOMAIN}"
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.services.solidtime.loadbalancer.server.port=8000"
      # http
      - "traefik.http.routers.solidtime.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.solidtime.entrypoints=web-external"
      # - "traefik.http.routers.solidtime.middlewares=redirect-to-https@file" # TODO: check this middleware
      - traefik.http.middlewares.solidtime-https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.solidtime.middlewares=solidtime-https-redirect
      # https
      - "traefik.http.routers.solidtime-https.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.solidtime-https.entrypoints=web-secure-external"
      - "traefik.http.routers.solidtime-https.tls.certresolver=cloudflare"
      - "traefik.http.routers.solidtime-https.tls=true"
    networks:
      - proxy
      - internal
    volumes:
      - "app-storage:/var/www/html/storage"
      - "./logs:/var/www/html/storage/logs"
      - "./app-storage:/var/www/html/storage/app"
    environment:
      CONTAINER_MODE: http
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/health-check/up"]
    env_file:
      - laravel.env
    depends_on:
      - database
  scheduler:
    restart: always
    image: "solidtime/solidtime:${SOLIDTIME_IMAGE_TAG:-latest}"
    user: "1000:1000"
    networks:
      - internal
    volumes:
      - "app-storage:/var/www/html/storage"
      - "./logs:/var/www/html/storage/logs"
      - "./app-storage:/var/www/html/storage/app"
    environment:
      CONTAINER_MODE: scheduler
    healthcheck:
      test: ["CMD", "healthcheck"]
    env_file:
      - laravel.env
    depends_on:
      - database
  queue:
    restart: always
    image: "solidtime/solidtime:${SOLIDTIME_IMAGE_TAG:-latest}"
    user: "1000:1000"
    networks:
      - internal
    volumes:
      - "app-storage:/var/www/html/storage"
      - "./logs:/var/www/html/storage/logs"
      - "./app-storage:/var/www/html/storage/app"
    environment:
      CONTAINER_MODE: worker
      WORKER_COMMAND: "php /var/www/html/artisan queue:work"
    healthcheck:
      test: ["CMD", "healthcheck"]
    env_file:
      - laravel.env
    depends_on:
      - database
  database:
    restart: always
    image: "postgres:15"
    #    ports:
    #      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: "${DB_PASSWORD:-secret}"
      POSTGRES_DB: "${DB_DATABASE}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
    volumes:
      - "database-storage:/var/lib/postgresql/data"
    networks:
      - internal
    healthcheck:
      test:
        - CMD
        - pg_isready
        - "-q"
        - "-d"
        - "${DB_DATABASE}"
        - "-U"
        - "${DB_USERNAME}"
      retries: 3
      timeout: 5s
  gotenberg:
    image: gotenberg/gotenberg:8
    networks:
      - internal
    healthcheck:
      test:
        ["CMD", "curl", "--silent", "--fail", "http://localhost:3000/health"]
networks:
  proxy:
    external: true
  internal:
volumes:
  database-storage:
  app-storage:
